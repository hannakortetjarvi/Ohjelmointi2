package tunnepaivakirja.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import tunnepaivakirja.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2019.04.27 22:31:03 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class TunnetilaIDTest {



  // Generated by ComTest BEGIN
  /** testTunnetilaID36 */
  @Test
  public void testTunnetilaID36() {    // TunnetilaID: 36
    TunnetilaID tid = new TunnetilaID(2); 
    assertEquals("From: TunnetilaID line: 38", 2, tid.getTunnusNro()); 
    TunnetilaID tid2 = new TunnetilaID(3); 
    assertEquals("From: TunnetilaID line: 40", 3, tid2.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testVastaaID51 */
  @Test
  public void testVastaaID51() {    // TunnetilaID: 51
    TunnetilaID tid1 = new TunnetilaID(); 
    tid1.vastaaID(1); 
    assertEquals("From: TunnetilaID line: 54", "Masennus", tid1.palautaTunnetila()); 
    tid1.vastaaID(2); 
    assertEquals("From: TunnetilaID line: 56", "Suru", tid1.palautaTunnetila()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPalautaTunnetila69 */
  @Test
  public void testPalautaTunnetila69() {    // TunnetilaID: 69
    TunnetilaID tid = new TunnetilaID(); 
    tid.vastaaID(3); 
    assertEquals("From: TunnetilaID line: 72", "Ilo", tid.palautaTunnetila()); 
    tid.vastaaID(4); 
    assertEquals("From: TunnetilaID line: 74", "Ahdistus", tid.palautaTunnetila()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPalautaTunnetilaTesti86 */
  @Test
  public void testPalautaTunnetilaTesti86() {    // TunnetilaID: 86
    TunnetilaID tid = new TunnetilaID(); 
    tid.vastaaID(1); 
    assertEquals("From: TunnetilaID line: 89", "Masennus", tid.palautaTunnetilaTesti(tid.getTunnusNro())); 
    tid.vastaaID(2); 
    assertEquals("From: TunnetilaID line: 91", "Suru", tid.palautaTunnetilaTesti(tid.getTunnusNro())); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPalautaID107 */
  @Test
  public void testPalautaID107() {    // TunnetilaID: 107
    TunnetilaID tid = new TunnetilaID(); 
    assertEquals("From: TunnetilaID line: 109", 0, tid.palautaID("Masennus")); 
    assertEquals("From: TunnetilaID line: 110", 3, tid.palautaID("Ahdistus")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetTunne126 */
  @Test
  public void testSetTunne126() {    // TunnetilaID: 126
    TunnetilaID tid = new TunnetilaID(); 
    tid.setTunne("Masennus"); 
    assertEquals("From: TunnetilaID line: 129", "Masennus", tid.palautaTunnetila()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi159 */
  @Test
  public void testRekisteroi159() {    // TunnetilaID: 159
    TunnetilaID id1 = new TunnetilaID(); 
    assertEquals("From: TunnetilaID line: 161", 0, id1.getTunnusNro()); 
    id1.rekisteroi(); 
    TunnetilaID id2 = new TunnetilaID(); 
    id2.rekisteroi(); 
    int n1 = id1.getTunnusNro(); 
    int n2 = id2.getTunnusNro(); 
    assertEquals("From: TunnetilaID line: 167", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetTunnusNro180 */
  @Test
  public void testGetTunnusNro180() {    // TunnetilaID: 180
    TunnetilaID id1 = new TunnetilaID(); 
    assertEquals("From: TunnetilaID line: 182", 0, id1.getTunnusNro()); 
    id1.rekisteroi(); 
    TunnetilaID id2 = new TunnetilaID(); 
    id2.rekisteroi(); 
    int n1 = id1.getTunnusNro(); 
    int n2 = id2.getTunnusNro(); 
    assertEquals("From: TunnetilaID line: 188", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetTunnusNro199 */
  @Test
  public void testSetTunnusNro199() {    // TunnetilaID: 199
    TunnetilaID tid = new TunnetilaID(); 
    tid.setTunnusNro(1); 
    assertEquals("From: TunnetilaID line: 202", 1, tid.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString214 */
  @Test
  public void testToString214() {    // TunnetilaID: 214
    TunnetilaID tid = new TunnetilaID(); 
    tid.parse("   2  |  Suru"); 
    assertEquals("From: TunnetilaID line: 217", true, tid.toString().startsWith("2|Suru")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse229 */
  @Test
  public void testParse229() {    // TunnetilaID: 229
    TunnetilaID tid = new TunnetilaID(); 
    tid.parse("  2  |  Suru"); 
    assertEquals("From: TunnetilaID line: 232", 2, tid.getTunnusNro()); 
    assertEquals("From: TunnetilaID line: 233", true, tid.toString().startsWith("2|Suru")); 
    tid.rekisteroi(); 
    int n = tid.getTunnusNro(); 
    tid.parse(""+(n+20));  // Otetaan merkkijonosta vain tunnusnumero
    tid.rekisteroi();  // ja tarkistetaan että seuraavalla kertaa tulee yhtä isompi
    assertEquals("From: TunnetilaID line: 239", n+20+1, tid.getTunnusNro()); 
  } // Generated by ComTest END
}