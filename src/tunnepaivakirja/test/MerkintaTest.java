package tunnepaivakirja.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import tunnepaivakirja.*;
// Generated by ComTest END

import kanta.SatunnaisiaArvoja;

/**
 * Test class made by ComTest
 * @version 2019.05.03 23:03:19 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class MerkintaTest {



  // Generated by ComTest BEGIN
  /** testGetPvm34 */
  @Test
  public void testGetPvm34() {    // Merkinta: 34
    Merkinta Pvm = new Merkinta(); 
    Pvm.vastaaEnsimmainen(); 
    assertEquals("From: Merkinta line: 37", 0, Pvm.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testGetTunne57 
   * @throws SailoException when error
   */
  @Test
  public void testGetTunne57() throws SailoException {    // Merkinta: 57
    Tunnepaivakirja kirja = new Tunnepaivakirja(); 
    Merkinta pvm = new Merkinta(); 
    pvm.setTunnusNro(1); 
    Tunnetila tun1 = new Tunnetila(); 
    Tunnetila tun2 = new Tunnetila(); 
    Tunnetila tun3 = new Tunnetila(); 
    TunnetilaID tid1 = new TunnetilaID(); tid1.vastaaID(1); 
    TunnetilaID tid2 = new TunnetilaID(); tid2.vastaaID(2); 
    TunnetilaID tid3 = new TunnetilaID(); tid3.vastaaID(3); 
    tun1.vastaaTunnetila(1,1,7); 
    tun2.vastaaTunnetila(2,1,6); 
    tun3.vastaaTunnetila(3,1,5); 
    kirja.lisaa(pvm); 
    kirja.lisaa(tid1); 
    kirja.lisaa(tid2); 
    kirja.lisaa(tid3); 
    kirja.lisaa(tun1); 
    kirja.lisaa(tun2); 
    kirja.lisaa(tun3); 
    assertEquals("From: Merkinta line: 78", "Masennus", pvm.getTunne(1)); 
    assertEquals("From: Merkinta line: 79", "Suru", pvm.getTunne(2)); 
    assertEquals("From: Merkinta line: 80", "Ilo", pvm.getTunne(3)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testTunne118 */
  @Test
  public void testTunne118() {    // Merkinta: 118
    Merkinta Pvm = new Merkinta(); 
    Pvm.vastaaEnsimmainen(); 
    assertEquals("From: Merkinta line: 121", "Masennus", Pvm.Tunne(1)); 
    assertEquals("From: Merkinta line: 122", "Ahdistus", Pvm.Tunne(2)); 
    assertEquals("From: Merkinta line: 123", "", Pvm.Tunne(3)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testGetVoima153 
   * @throws SailoException when error
   */
  @Test
  public void testGetVoima153() throws SailoException {    // Merkinta: 153
    Tunnepaivakirja kirja = new Tunnepaivakirja(); 
    Merkinta pvm = new Merkinta(); 
    pvm.setTunnusNro(1); 
    Tunnetila tun1 = new Tunnetila(); 
    Tunnetila tun2 = new Tunnetila(); 
    Tunnetila tun3 = new Tunnetila(); 
    TunnetilaID tid1 = new TunnetilaID(); tid1.vastaaID(1); 
    TunnetilaID tid2 = new TunnetilaID(); tid2.vastaaID(2); 
    TunnetilaID tid3 = new TunnetilaID(); tid3.vastaaID(3); 
    tun1.vastaaTunnetila(1,1,7); 
    tun2.vastaaTunnetila(2,1,6); 
    tun3.vastaaTunnetila(3,1,5); 
    kirja.lisaa(pvm); 
    kirja.lisaa(tid1); 
    kirja.lisaa(tid2); 
    kirja.lisaa(tid3); 
    kirja.lisaa(tun1); 
    kirja.lisaa(tun2); 
    kirja.lisaa(tun3); 
    assertEquals("From: Merkinta line: 174", "7", pvm.getVoima(1)); 
    assertEquals("From: Merkinta line: 175", "6", pvm.getVoima(2)); 
    assertEquals("From: Merkinta line: 176", "5", pvm.getVoima(3)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testVoima220 
   * @throws SailoException when error
   */
  @Test
  public void testVoima220() throws SailoException {    // Merkinta: 220
    Merkinta pvm = new Merkinta(); 
    pvm.tunnetila1 = "Masennus (4)"; 
    pvm.tunnetila2 = "Ahdistus (10)"; 
    pvm.tunnetila3 = "Onni (2)"; 
    assertEquals("From: Merkinta line: 226", "4", pvm.Voima(1)); 
    assertEquals("From: Merkinta line: 227", "10", pvm.Voima(2)); 
    assertEquals("From: Merkinta line: 228", "2", pvm.Voima(3)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetTilanne262 */
  @Test
  public void testGetTilanne262() {    // Merkinta: 262
    Merkinta Pvm = new Merkinta(); 
    Pvm.vastaaEnsimmainen(); 
    assertEquals("From: Merkinta line: 265", "Tuleva tentti", Pvm.getTilanne()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetReaktio276 */
  @Test
  public void testGetReaktio276() {    // Merkinta: 276
    Merkinta Pvm = new Merkinta(); 
    Pvm.vastaaEnsimmainen(); 
    assertEquals("From: Merkinta line: 279", "Nopea syke", Pvm.getReaktio()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetTietoja289 */
  @Test
  public void testGetTietoja289() {    // Merkinta: 289
    Merkinta Pvm = new Merkinta(); 
    Pvm.vastaaEnsimmainen(); 
    assertEquals("From: Merkinta line: 292", "", Pvm.getTietoja()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetPvm304 */
  @Test
  public void testSetPvm304() {    // Merkinta: 304
    Merkinta Pvm = new Merkinta(); 
    Pvm.vastaaEnsimmainen(); 
    Pvm.setPvm("10.12.2019"); 
    assertEquals("From: Merkinta line: 308", "10.12.2019", Pvm.getPvm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetKello320 */
  @Test
  public void testSetKello320() {    // Merkinta: 320
    Merkinta Pvm = new Merkinta(); 
    Pvm.vastaaEnsimmainen(); 
    Pvm.setKello("12:00"); 
    assertEquals("From: Merkinta line: 324", "12:00", Pvm.getKello()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetTunne1336 */
  @Test
  public void testSetTunne1336() {    // Merkinta: 336
    Merkinta Pvm = new Merkinta(); 
    Pvm.vastaaEnsimmainen(); 
    Pvm.setTunne1("Ahdistus (7)"); 
    assertEquals("From: Merkinta line: 340", "Ahdistus", Pvm.Tunne(1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetTunne2352 */
  @Test
  public void testSetTunne2352() {    // Merkinta: 352
    Merkinta Pvm = new Merkinta(); 
    Pvm.vastaaEnsimmainen(); 
    Pvm.setTunne2("Suru (5)"); 
    assertEquals("From: Merkinta line: 356", "Suru", Pvm.Tunne(2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetTunne3368 */
  @Test
  public void testSetTunne3368() {    // Merkinta: 368
    Merkinta Pvm = new Merkinta(); 
    Pvm.vastaaEnsimmainen(); 
    Pvm.setTunne3("Masennus (3)"); 
    assertEquals("From: Merkinta line: 372", "Masennus", Pvm.Tunne(3)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetTilanne384 */
  @Test
  public void testSetTilanne384() {    // Merkinta: 384
    Merkinta Pvm = new Merkinta(); 
    Pvm.vastaaEnsimmainen(); 
    Pvm.setTilanne("Tentti"); 
    assertEquals("From: Merkinta line: 388", "Tentti", Pvm.getTilanne()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetReaktio400 */
  @Test
  public void testSetReaktio400() {    // Merkinta: 400
    Merkinta Pvm = new Merkinta(); 
    Pvm.vastaaEnsimmainen(); 
    Pvm.setReaktio("Paniikki"); 
    assertEquals("From: Merkinta line: 404", "Paniikki", Pvm.getReaktio()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetTietoja416 */
  @Test
  public void testSetTietoja416() {    // Merkinta: 416
    Merkinta Pvm = new Merkinta(); 
    Pvm.vastaaEnsimmainen(); 
    Pvm.setTietoja("Kiire?"); 
    assertEquals("From: Merkinta line: 420", "Kiire?", Pvm.getTietoja()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnna448 
   * @throws SailoException when error
   */
  @Test
  public void testAnna448() throws SailoException {    // Merkinta: 448
    Merkinta Pvm = new Merkinta(); 
    Pvm.vastaaEnsimmainen(); 
    assertEquals("From: Merkinta line: 452", "23.08.2018", Pvm.anna(0)); 
    assertEquals("From: Merkinta line: 453", "Tuleva tentti", Pvm.anna(5)); 
    assertEquals("From: Merkinta line: 454", "Nopea syke", Pvm.anna(6)); 
    assertEquals("From: Merkinta line: 455", "", Pvm.anna(7)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone496 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone496() throws CloneNotSupportedException {    // Merkinta: 496
    Merkinta merkinta = new Merkinta(); 
    merkinta.parse("   2|23.08.2018|12:00"); 
    Merkinta kopio = merkinta.clone(); 
    assertEquals("From: Merkinta line: 501", merkinta.toString(), kopio.toString()); 
    merkinta.parse("   3|23.08.2018|12:00"); 
    assertEquals("From: Merkinta line: 503", false, kopio.toString().equals(merkinta.toString())); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testVastaaEnsimmainen516 
   * @throws SailoException when error
   */
  @Test
  public void testVastaaEnsimmainen516() throws SailoException {    // Merkinta: 516
    Merkinta pvm = new Merkinta(); 
    pvm.vastaaEnsimmainen(); 
    assertEquals("From: Merkinta line: 520", "23.08.2018", pvm.getPvm()); 
    assertEquals("From: Merkinta line: 521", "Tuleva tentti", pvm.getTilanne()); 
    assertEquals("From: Merkinta line: 522", "Nopea syke", pvm.getReaktio()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi561 */
  @Test
  public void testRekisteroi561() {    // Merkinta: 561
    Merkinta pvm1 = new Merkinta(); 
    assertEquals("From: Merkinta line: 563", 0, pvm1.getTunnusNro()); 
    pvm1.rekisteroi(); 
    Merkinta pvm2 = new Merkinta(); 
    pvm2.rekisteroi(); 
    int n1 = pvm1.getTunnusNro(); 
    int n2 = pvm2.getTunnusNro(); 
    assertEquals("From: Merkinta line: 569", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetTunnusNro582 */
  @Test
  public void testGetTunnusNro582() {    // Merkinta: 582
    Merkinta merkinta = new Merkinta(); 
    assertEquals("From: Merkinta line: 584", 0, merkinta.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testSetTunnusNro595 */
  @Test
  public void testSetTunnusNro595() {    // Merkinta: 595
    Merkinta merkinta = new Merkinta(); 
    merkinta.setTunnusNro(0); 
    assertEquals("From: Merkinta line: 598", 0, merkinta.getTunnusNro()); 
    Merkinta merkinta2 = new Merkinta(); 
    merkinta2.setTunnusNro(4); 
    assertEquals("From: Merkinta line: 601", 4, merkinta2.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString612 */
  @Test
  public void testToString612() {    // Merkinta: 612
    Merkinta merkinta = new Merkinta(); 
    merkinta.parse("   1  |  23.08.2018   | 17:00  |  Masennus (5)  | Ahdistus  (2)  |  |  Puhe  |  Käheä ääni  |  |"); 
    assertEquals("From: Merkinta line: 615", true, merkinta.toString().startsWith("1|23.08.2018|17:00|Masennus (5)|"));  // on enemmäkin kuin 4 kenttää, siksi loppu |
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse633 */
  @Test
  public void testParse633() {    // Merkinta: 633
    Merkinta merkinta = new Merkinta(); 
    merkinta.parse("   1  |  23.08.2018   | 17:00  |  Masennus (5)  | Ahdistus  (2)  |  |  Puhe  |  Käheä ääni  |  |"); 
    assertEquals("From: Merkinta line: 636", 1, merkinta.getTunnusNro()); 
    assertEquals("From: Merkinta line: 637", true, merkinta.toString().startsWith("1|23.08.2018|17:00|Masennus (5)|"));  // on enemmäkin kuin 4 kenttää, siksi loppu |
  } // Generated by ComTest END
}